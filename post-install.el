;;; Package setup: GNU + MELPA only
(require 'package)

;; Where packages get installed
(setq package-user-dir (expand-file-name "~/src/mine/elpa.d/"))
(make-directory package-user-dir t)

;; Archives (prefer GNU first, keep MELPA second)
(setq package-archives
      '(("gnu"   . "https://elpa.gnu.org/packages/")
        ("melpa" . "https://melpa.org/packages/")))
(setq package-archive-priorities '(("gnu" . 10) ("melpa" . 5)))

;; Initialize package.el (Emacs 27+ usually does this earlier; guard just in case)
(unless (bound-and-true-p package--initialized)
  (package-initialize))

;; First-time setup: populate archive contents if empty
(unless package-archive-contents
  (package-refresh-contents))

(dolist
  (message "Refresh packages..")
  (package-refresh-contents)
  (message "magit..")
  (package-install 'magit)
  (message "use-package..")
  (message "use-package..")
  (package-install 'use-package)
  (message "Package epl..")
  (package-install 'epl)
  (message "Package auto-complete..")
  (package-install 'auto-complete)
  (message "Package dash..")
  (package-install 'dash)
  (message "Package elixir-mode..")
  (package-install 'elixir-mode)
  (message "Package haskell-mode..")
  (package-install 'haskell-mode)
  (message "Package exec-path-from-shell")
  (package-install 'exec-path-from-shell)
  (message "Package")
  (package-install 'highlight-current-line)
  (message "Hightlight current line")
  (package-install 'drag-stuff)
  (message "drag-stuff")
  (package-install 'ws-trim)
  (message "ws-trim")
  (package-install 'paredit)
  (message "paredit")
  (package-install 'multiple-cursors)
  (message "multiple-cursors")
  (package-install 'web-mode)
  (message "web-mode")
  (package-install 'yapfify)
  (message "yapfify")
  (package-install 'swift-mode)
  (message "swift-mode")
  (package-install 'apache-mode)
  (message "apache-mode")
  (package-install 'markdown-mode)
  (message "markdown-mode")
  (package-install 'yaml-mode)
  (message "yaml-mode")
  (package-install 'nix-mode)
  (message "nix-mode")
  (package-install 'nodejs-repl)
  (message "nodejs-repl")
  (package-install 'dockerfile-mode)
  (message "dockerfile-mode")
  (package-install 'prog-fill)
  (package-install 'highlight-current-line)
  (package-install 'drag-stuff)
  (package-install 'wc-mode)
  (package-install 'langtool)
  (package-install 'flymake-cursor)
  (package-install 'expand-region)
  (package-install 'writegood-mode)
  (package-install 'csv-mode)
  (package-install 'elpy)
  (package-install 'importmagic)
  (package-install 'flycheck-mypy)
  (package-install 'lsp-mode)
  (package-install 'writeroom-mode)
  (package-install 'rg)
  (package-install 'persistent-overlays)

  ;; Advanced testing and development packages for Stenkoll
  ;; Note: eldev is a CLI tool, install via: brew install eldev
  (message "buttercup (BDD testing framework)")
  (package-install 'buttercup)
  (message "el-mock (advanced mocking)")
  (package-install 'el-mock)
  (message "undercover (test coverage)")
  (package-install 'undercover)
  (message "package-lint (package validation)")
  (package-install 'package-lint)
  (message "denote note-taking with org-mode package")
  (package-install 'denote)
  )


